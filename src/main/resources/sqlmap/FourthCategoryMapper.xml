<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.auditing.work.dal.daointerface.FourthCategoryMapper">
    <resultMap id="FourthCategoryMap" type="com.auditing.work.dal.dataobject.FourthCategory">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <id column="third_id" jdbcType="INTEGER" property="third_id"/>
        <result column="level" jdbcType="VARCHAR" property="level"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="total_score" jdbcType="VARCHAR" property="total_score"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
         <result column="user_name" jdbcType="VARCHAR" property="userName"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, third_id, level, name, total_score, remarks
    </sql>
    <select id="selectAllFourthCategoryByThird"  resultMap="FourthCategoryMap">
        select * from FourthCategory 
        	<where> 
				    <if test="third_id != null">
				        AND third_id=#{third_id, jdbcType=INTEGER} 
				    </if> 
				    <if test="key != null and key != ''">
				        OR level LIKE '%${key}%'   OR name LIKE '%${key}%'
				    </if>
				  
		  </where>
               
    </select>
    
   
    
    <select id="query"  resultType="com.auditing.work.dal.dataobject.ReviewPointsReturn">
        SELECT
				FourthCategory.id AS id4,
				FourthCategory.`level` AS level4,
				FourthCategory.`name` AS name4,
				ThirdCategory.`level` AS level3,
				ThirdCategory.id AS id3,
				FourthCategory.total_score,
				FourthCategory.user_name as userName,
				ThirdCategory.`name` AS name3,
				SecondCategory.`level` AS level2,
				SecondCategory.id AS id2,
				SecondCategory.`name` AS name2,
				FirstCategory.id AS id1,
				FirstCategory.`name` AS name1,
				FirstCategory.`level` AS level1
		FROM
			FourthCategory
				LEFT JOIN ReviewPoint ON FourthCategory.id=ReviewPoint.fourth_id
				LEFT JOIN dep_reviewpoint_status x on ReviewPoint.id = x.review_point_id 
				LEFT JOIN review_point_doc ON 	FourthCategory.id = review_point_doc.fourth_id					
				LEFT JOIN ThirdCategory ON FourthCategory.third_id=ThirdCategory.id
				LEFT JOIN SecondCategory ON ThirdCategory.second_id=SecondCategory.id
				LEFT JOIN FirstCategory ON SecondCategory.first_id=FirstCategory.id
				left join 
				<if test="dep == null or dep == ''">
					fourthcat_dep_relation t
				</if>
				<if test="dep != null and dep != ''">
					(select * from fourthcat_dep_relation where depid = #{depid}) t
				</if>
				  on FourthCategory.id=t.fourthid
		 <where> 
				    <if test="key != null  and key != '' ">
				      	AND (  
								   FourthCategory.`name` LIKE '%${key}%' 
					        	OR ThirdCategory.`name` LIKE '%${key}%' 
					        	OR SecondCategory.`name` LIKE '%${key}%' 
					        	OR FirstCategory.`name` LIKE '%${key}%' 
					        	OR FourthCategory.`level` LIKE '%${key}%' 
					        	OR ThirdCategory.`level` LIKE '%${key}%' 
					        	OR SecondCategory.`level` LIKE '%${key}%' 
					        	OR FirstCategory.`level` LIKE '%${key}%'
					        	OR review_point_doc.`doc_name` LIKE '%${key}%'
				        	)
				    </if> 
				    <if test="firstCategoryId != null  ">
				        AND FirstCategory.id =#{firstCategoryId}
				    </if> 
				    <if test="fourthCategoryId != null  ">
				        AND FourthCategory.id =#{fourthCategoryId}
				    </if> 
				    <if test="userName != null and userName != '' ">
				        AND t.username =#{userName}
				    </if> 
				    <choose>
				        <when test="status==0">
				            AND ReviewPoint.department_id like '%${dep}%'
				            AND x.status is null
				        </when>
				        <when test="status==null or status==-1">
				            AND ReviewPoint.department_id like '%${dep}%'
				        </when>
				        <otherwise>
				            <if test="dep != null  and dep != '' ">
						        AND x.dep_name = #{dep}
						    </if> 
						    <if test="status != -1 and status != null">
						        AND x.`status` = #{status}
						    </if> 
				        </otherwise>
				    </choose>
		  </where>
		 group by FourthCategory.id 
		 ORDER BY FourthCategory.`level` ASC 
         LIMIT ${startRow},${size}     
    </select>
    
    
     <select id="querytotalRow"   resultType="int" >
  		SELECT
				COUNT(DISTINCT (FourthCategory.id))
		FROM
			FourthCategory
				LEFT JOIN ReviewPoint ON FourthCategory.id=ReviewPoint.fourth_id	
				LEFT JOIN dep_reviewpoint_status x on ReviewPoint.id = x.review_point_id 				
				LEFT JOIN ThirdCategory ON FourthCategory.third_id=ThirdCategory.id
				LEFT JOIN SecondCategory ON ThirdCategory.second_id=SecondCategory.id
				LEFT JOIN FirstCategory ON SecondCategory.first_id=FirstCategory.id
				left join 
				<if test="dep == null or dep == ''">
					fourthcat_dep_relation t
				</if>
				<if test="dep != null and dep != ''">
					(select * from fourthcat_dep_relation where depid = #{depid}) t
				</if>
				on FourthCategory.id=t.fourthid
		 <where> 
				    <if test="key != null  and key != '' ">
				      	AND (  
								   FourthCategory.`name` LIKE '%${key}%' 
					        	OR ThirdCategory.`name` LIKE '%${key}%' 
					        	OR SecondCategory.`name` LIKE '%${key}%' 
					        	OR FirstCategory.`name` LIKE '%${key}%' 
					        	OR FourthCategory.`level` LIKE '%${key}%' 
					        	OR ThirdCategory.`level` LIKE '%${key}%' 
					        	OR SecondCategory.`level` LIKE '%${key}%' 
					        	OR FirstCategory.`level` LIKE '%${key}%'
				        	)
				    </if> 
				    <if test="firstCategoryId != null  ">
				        AND FirstCategory.id =#{firstCategoryId}
				    </if> 
				    <if test="fourthCategoryId != null  ">
				        AND FourthCategory.id =#{fourthCategoryId}
				    </if>
				    <if test="userName != null and userName != '' ">
				        AND t.username =#{userName}
				    </if>
					<choose>
				        <when test="status==0">
				            AND ReviewPoint.department_id like '%${dep}%'
				            AND x.status is null
				        </when>
				        <when test="status==null or status==-1">
				            AND ReviewPoint.department_id like '%${dep}%'
				        </when>
				        <otherwise>
				            <if test="dep != null  and dep != '' ">
						        AND x.dep_name = #{dep}
						    </if> 
						    <if test="status != -1 and status != null">
						        AND x.`status` = #{status}
						    </if> 
				        </otherwise>
				    </choose>
		  </where>
		
		
             
    </select>
    
    
    <select id="selectAllView"  resultMap="FourthCategoryMap">
        select FourthCategory.* from  
		FourthCategory
				LEFT JOIN ReviewPoint ON FourthCategory.id=ReviewPoint.fourth_id					
				LEFT JOIN ThirdCategory ON FourthCategory.third_id=ThirdCategory.id
				LEFT JOIN SecondCategory ON ThirdCategory.second_id=SecondCategory.id
				LEFT JOIN FirstCategory ON SecondCategory.first_id=FirstCategory.id
		 <where> 
				    <if test="key != null  and key != '' ">
				      	AND (  
								   FourthCategory.`name` LIKE '%${key}%' 
					        	OR ThirdCategory.`name` LIKE '%${key}%' 
					        	OR SecondCategory.`name` LIKE '%${key}%' 
					        	OR FirstCategory.`name` LIKE '%${key}%' 
					        	OR FourthCategory.`level` LIKE '%${key}%' 
					        	OR ThirdCategory.`level` LIKE '%${key}%' 
					        	OR SecondCategory.`level` LIKE '%${key}%' 
					        	OR FirstCategory.`level` LIKE '%${key}%'
				        	)
				    </if> 
				    <if test="firstCategoryId != null  ">
				        AND FirstCategory.id =#{firstCategoryId}
				    </if> 
				   <if test="dep != null  and dep != '' ">
				        AND ReviewPoint.department_id LIKE '%${dep}%'
				    </if> 
				     <if test="userName != null and userName != '' ">
				        AND FourthCategory.user_name =#{userName}
				    </if> 

		  </where>
         group by FourthCategory.id 
		 ORDER BY FourthCategory.`level` ASC  
    </select>
    
    <select id="selectAll"  resultMap="FourthCategoryMap">
        select * from FourthCategory 

               
    </select>
    
    <select id="selectKeyList"  resultMap="FourthCategoryMap">
       select * from FourthCategory where `name` LIKE '%（★）%'             
    </select>

    <select id="selectList"  resultMap="FourthCategoryMap">
        select * from FourthCategory 
            <where> 
				    <if test="userName != null and userName!= '' ">
				        AND FirstCategory.user_name =#{user_name}
				    </if> 

		  </where>
               
    </select>
    <select id="selectByLevel" resultMap="FourthCategoryMap" parameterType="java.lang.String">
        select * from FourthCategory where level=#{level, jdbcType=VARCHAR}
    </select>
    <select id="selectById" resultMap="FourthCategoryMap" parameterType="java.lang.Integer">
        select * from FourthCategory where id=#{id, jdbcType=VARCHAR}
    </select>
    
      <update id="totalScoreReset" >
        update FourthCategory set FourthCategory.total_score = 'D'
    </update>
    
    <update id="updateFourthCategory" parameterType="com.auditing.work.dal.dataobject.FourthCategory">
        update FourthCategory
        <set>
            <if test="total_score != null">
                total_score = #{total_score,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <insert id="insert" parameterType="com.auditing.work.dal.dataobject.FourthCategory">
        insert into FourthCategory (id, third_id, level, name, total_score, remarks)
        values (#{id,jdbcType=INTEGER}, #{third_id,jdbcType=INTEGER}, #{level,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
        #{total_score,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}
        )
    </insert>
</mapper>
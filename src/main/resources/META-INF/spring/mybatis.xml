<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
		default-lazy-init="true">

    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
        <property name="poolProperties">
            <bean class="org.apache.tomcat.jdbc.pool.PoolProperties">
                <!-- <property name="driverClassName" value="com.mysql.jdbc.Driver"/> -->
                <property name="driverClassName" value="net.sf.log4jdbc.DriverSpy"/>
                <property name="url" value="${db.url}"/>
                <property name="username" value="${db.user}"/>
                <property name="password" value="${db.password}"/>
                <property name="jmxEnabled" value="false"/>
                <property name="testWhileIdle" value="false"/>
                <property name="initialSize" value="10"/>
                <property name="maxActive" value="100"/>
                <property name="maxIdle" value="30"/>
                <property name="minIdle" value="15"/>
                <property name="defaultAutoCommit" value="false"/>
                <property name="maxWait" value="5000"/>
                <property name="removeAbandoned" value="true"/>
                <property name="removeAbandonedTimeout" value="120"/>
                <property name="testOnBorrow" value="true"/>
                <property name="testOnReturn" value="false"/>
                <property name="validationQuery" value="SELECT 1"/>
                <property name="validationInterval" value="60000"/>
                <property name="validationQueryTimeout" value="3"/>
                <property name="timeBetweenEvictionRunsMillis" value="300000"/>
                <property name="minEvictableIdleTimeMillis" value="1800000"/>
                <property name="jdbcInterceptors"
                          value="org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer"/>
            </bean>
        </property>
    </bean>


    <!-- Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
		<property name="packagesToScan" value="com.auditing.work.jpa.po"/>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<prop key="hibernate.hbm2ddl.auto">none</prop>  
			</props>
		</property>
	</bean>
	
	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform">
			<bean factory-method="getDialect" class="com.auditing.work.jpa.Hibernates">
				<constructor-arg ref="dataSource"/>
			</bean>
		</property>
	</bean>
	<!-- 事务管理器配置, Jpa单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	<!-- Spring Data Jpa配置, 扫描base-package下所有继承于Repository<T,ID>的接口 -->
 	<jpa:repositories base-package="com.auditing.work.jpa" transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory"/>
    
	
	<!-- 定义aspectj -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>

    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
    
    
    <!--使用tomcat jdbc pool,仅读写库需要使用事务
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>-->
    

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean id="auditingDetailMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <property name="mapperInterface" value="com.auditing.work.dal.daointerface.AuditingDetailMapper"/>
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean id="usersMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <property name="mapperInterface" value="com.auditing.work.dal.daointerface.UsersMapper"/>
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean id="reviewPointMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <property name="mapperInterface" value="com.auditing.work.dal.daointerface.ReviewPointMapper"/>
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean id="departmentMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <property name="mapperInterface" value="com.auditing.work.dal.daointerface.DepartmentMapper"/>
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean id="firstCategoryMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <property name="mapperInterface" value="com.auditing.work.dal.daointerface.FirstCategoryMapper"/>
    </bean>
    <!-- scan for mappers and let them be autowired -->
    <bean id="secondCategoryMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <property name="mapperInterface" value="com.auditing.work.dal.daointerface.SecondCategoryMapper"/>
    </bean>
    <!-- scan for mappers and let them be autowired -->
    <bean id="thirdCategoryMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <property name="mapperInterface" value="com.auditing.work.dal.daointerface.ThirdCategoryMapper"/>
    </bean>
    <!-- scan for mappers and let them be autowired -->
    <bean id="fourthCategoryMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <property name="mapperInterface" value="com.auditing.work.dal.daointerface.FourthCategoryMapper"/>
    </bean>
    
        <!-- scan for mappers and let them be autowired -->
    <bean id="ReviewPointActionLogMappe" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <property name="mapperInterface" value="com.auditing.work.dal.daointerface.ReviewPointActionLogMapper"/>
    </bean>
    


</beans>